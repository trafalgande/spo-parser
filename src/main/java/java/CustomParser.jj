/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. E:\ITMO\TEST\shees\src\main\java\java\CustomParser.jj */
/*@egen*/options {
             
                         
}

PARSER_BEGIN(CustomParser)

public class CustomParser/*@bgen(jjtree)*/implements CustomParserTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected static JJTCustomParserState jjtree = new JJTCustomParserState();

/*@egen*/
    public static void main(String[] args) {
       CustomParser customParser = new CustomParser(System.in);
       try {
           ASTStart root = customParser.Start();
           root.dump("");
       } catch (Exception e) {
         System.out.println(e.getMessage());
         e.printStackTrace();
       }
    }
}


PARSER_END(CustomParser)

SKIP : { " " | "\t" }

TOKEN : { <EOL : "\n" | "\r" | "\r\n" > }

TOKEN : {
    <CMD: "create" | "read" | "update" | "delete" >
        | <DIR_OR_NODE: "dir" | "node"  >

    | <#LETTER: ["a"-"z", "A"-"Z"] >
    | <#DOT : "." >
    | <WORD: (<LETTER>)+ >

    | <PATH: (<WORD>(<DOT>)?)+ | <DOT> >

    | <#eq: "=" >
    | <#gt: ">" >
    | <#lt: "<" >
    | <COMPARE: <eq> | <gt> | <lt> >

    | <#and: " & " >
    | <#or: " | " >
    | <AND_OR: <and> | <or> >
}

ASTStart Start() : {}
{
  Input() <EOL>
  { return jjtn000; }
}

void Input()       : {}
{
    Command() ( DirOrNode() )? Path()( NewElement() )?( Condition() )?
}

void Path() : {Token t;}
{
    t=<PATH> {jjtn000.setName(t.image);}
}

void DirOrNode() : {Token t;}
{
    t=<DIR_OR_NODE> {jjtn000.setName(t.image);}
}

void Command() : {Token t;}
{
    t=<CMD> {jjtn000.setName(t.image);}
}

void Condition() : {}
{
        "[" ( SubCondition() (AndOr() SubCondition())? )+ "]"
}

void SubCondition() : {}
{
    ConditionItem() CompareSign() ConditionItem()
}

void ConditionItem() : {Token t;}
{
    t=<WORD> {jjtn000.setName(t.image);}
}

void CompareSign() : {Token t;}
{
    t=<COMPARE> {jjtn000.setName(t.image);}
}

void AndOr(): {Token t;}
{
    t=<AND_OR> {jjtn000.setName(t.next.image);}
}

void NewElement() : {Token t;}
{
    t="!"<WORD> {jjtn000.setName(t.next.image);}
}

